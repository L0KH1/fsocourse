{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Documents/GitHub/fsocourse/part1/lesson/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [good, /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), neutral, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNeutral(neutral + 1),\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), bad, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setBad(bad + 1),\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/luke/Documents/GitHub/fsocourse/part1/lesson/src/App.js"],"names":["useState","Button","props","handleClick","text","App","good","setGood","neutral","setNeutral","bad","setBad"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,iBACb;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACC,WAAvB;AAAA,YACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,M;;AAMN,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA,eACGM,IADH,eAEE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMC,OAAO,CAACD,IAAI,GAAC,CAAN,CAAlC;AAA4C,MAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFF,EAIGE,OAJH,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAMC,UAAU,CAACD,OAAO,GAAC,CAAT,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAMGE,GANH,eAOE;AAAQ,MAAA,OAAO,EAAE,MAAMC,MAAM,CAACD,GAAG,GAAC,CAAL,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjBD;;GAAML,G;;MAAAA,G;AAmBN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      {good}\n      <Button handleClick={() => setGood(good+1)} text=\"good\"/>\n      {/* <button onClick={() => setGood(good+1)}>good</button> */}\n      {neutral}\n      <button onClick={() => setNeutral(neutral+1)}>neutral</button>\n      {bad}\n      <button onClick={() => setBad(bad+1)}>bad</button>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}