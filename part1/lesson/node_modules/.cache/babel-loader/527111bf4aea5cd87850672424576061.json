{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Documents/GitHub/fsocourse/part1/lesson/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"statistics\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"good \", props.good]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"neutral \", props.neutral]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"bad \", props.bad]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"total \", props.bad + props.neutral + props.good]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"average = \", (-props.bad + props.good) / (props.good + props.bad + props.neutral)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"positive = \", props.good / (props.good + props.bad + props.neutral), \"%\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\n_c = Statistics;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n\n_c2 = Button;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), good + neutral + bad > 0 ? /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 89\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/luke/Documents/GitHub/fsocourse/part1/lesson/src/App.js"],"names":["useState","Statistics","props","good","neutral","bad","Button","handleClick","text","App","setGood","setNeutral","setBad"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,iBACjB;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,wBAASA,KAAK,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAA,2BAAYD,KAAK,CAACE,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,eAIE;AAAA,uBAAQF,KAAK,CAACG,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,eAKE;AAAA,yBAAUH,KAAK,CAACG,GAAN,GAAUH,KAAK,CAACE,OAAhB,GAAwBF,KAAK,CAACC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,eAME;AAAA,6BAAc,CAAC,CAACD,KAAK,CAACG,GAAP,GAAWH,KAAK,CAACC,IAAlB,KAAyBD,KAAK,CAACC,IAAN,GAAWD,KAAK,CAACG,GAAjB,GAAqBH,KAAK,CAACE,OAApD,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,eAOE;AAAA,8BAAeF,KAAK,CAACC,IAAN,IAAYD,KAAK,CAACC,IAAN,GAAWD,KAAK,CAACG,GAAjB,GAAqBH,KAAK,CAACE,OAAvC,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,U;;AAYN,MAAMK,MAAM,GAAIJ,KAAD,iBACb;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACK,WAAvB;AAAA,YACGL,KAAK,CAACM;AADT;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMF,M;;AAMN,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACI,OAAD,EAAUO,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACK,GAAD,EAAMO,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMU,OAAO,CAACP,IAAI,GAAC,CAAN,CAAlC;AAA4C,MAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMQ,UAAU,CAACP,OAAO,GAAC,CAAT,CAArC;AAAkD,MAAA,IAAI,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMQ,MAAM,CAACP,GAAG,GAAC,CAAL,CAAjC;AAA0C,MAAA,IAAI,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAJF,EAKKF,IAAI,GAACC,OAAL,GAAaC,GAAd,GAAmB,CAApB,gBAAyB,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEF,IAAlB;AAAwB,MAAA,OAAO,EAAEC,OAAjC;AAA0C,MAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAAzB,gBAAiF;AAAA,8BAChF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADgF,eAElF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFkF;AAAA;AAAA;AAAA;AAAA;AAAA,YALpF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjBD;;GAAMI,G;;MAAAA,G;AAmBN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\n\nconst Statistics = (props) => (\n  <div>\n    <h1>statistics</h1>\n    <p>good {props.good}</p>\n    <p>neutral {props.neutral}</p>\n    <p>bad {props.bad}</p>\n    <p>total {props.bad+props.neutral+props.good}</p>\n    <p>average = {(-props.bad+props.good)/(props.good+props.bad+props.neutral)}</p>\n    <p>positive = {props.good/(props.good+props.bad+props.neutral)}%</p>\n  </div>\n  )\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={() => setGood(good+1)} text=\"good\"/>\n      <Button handleClick={() => setNeutral(neutral+1)} text=\"neutral\"/>\n      <Button handleClick={() => setBad(bad+1)} text=\"bad\"/>\n      {((good+neutral+bad)>0) ? <Statistics good={good} neutral={neutral} bad={bad}/> : <div>\n        <h1>statistics</h1>\n      <p>no feedback given</p></div>}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}